{
  "openapi": "3.0.1",
  "info": {
    "title": "Hashtopolis API",
    "version": "v2"
  },
  "servers": [{
    "url": "/api/v2"
  }],
  "paths": {
    "/auth/token": {
      "post": {
        "tags": [
          "Login"
        ],
        "requestBody": {
            "required": true,
            "content": {
              "application/json":{
                "schema": {
                  "$ref": "#/components/schemas/TokenRequest"
                }
              }
            }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/ui/hashlists": {
      "get": {
        "tags": [
          "Hashlists"
        ],
        "parameters": [
          { 
            "name": "startsAt",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 0,
            "description": "The starting index of the values"
          },
          { 
            "name": "maxResults",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 100,
            "description": "The maximum number of issues to return per page."
          },
          { 
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Filters results using a query."
          },
          { 
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The list of fields to return for each issue"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/HashlistResponse"
                }
              } 
            }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": [
              "todo.all"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Hashlists"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json":{
              "schema": {
                "$ref": "#/components/schemas/Hashlist"
              }
            }
          }
      },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/HashlistResponse"
                }
              } 
            }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": [
              "todo.all"
            ]
          }
        ]
      }
    },
    "/ui/hashlists/{id}": {
      "get": {
        "tags": [
          "Hashlists"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Hashlist"
              } 
            }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": [
              "todo.all"
            ]
          }
        ]
      },      
      "patch": {
        "tags": [
          "Hashlists"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Hashlist"
              } 
            }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": [
              "todo.all"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Hashlists"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 10
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successfully deleted"
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": [
              "todo.all"
            ]
          }
        ]
      }
    }
  },
  
  "components": {
    "schemas": {
      "ListResponse": {
        "type": "object",
        "properties": {
          "expand": {
            "type": "string",
            "example": "hashlist"
          },
          "startsAt": {
            "type": "integer",
            "example": 0
          },
          "maxResults": {
            "type": "integer",
            "example": 100
          },
          "total": {
            "type": "integer",
            "example": 200
          }
        }
      },
      "HashlistResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ListResponse"
          },
          {
            "type": "object",
            "properties": {
              "values": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                    "$ref": "#/components/schemas/Hashlist"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "hashlistId": {
                          "type": "integer"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        ]
      },
      "TokenResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ListResponse"
          },
          {
            "type": "object",
            "properties": {
              "values": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          }
        ]
      },
      "Hashlist": {
        "type": "object",
        "properties": {
          "hashtypeId": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "format": {
            "type": "integer"
          },
          "hashCount": {
            "type": "integer"
          },
          "isSecret": {
            "type": "boolean"
          },
          "isSalted": {
            "type": "boolean"
          },
          "seperator": {
            "type": "string"
          },
          "accessGroupId": {
            "type": "integer"
          },
          "useBrain": {
            "type": "boolean"
          },
          "brainFeatures": {
            "type": "string"
          },
          "data": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Token": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          },
          "expires": {
            "type": "integer"
          }
        },
        "additionalProperties": false
      },
      "TokenRequest": {
        "type": "array",
        "items": {
          "type": "string",
          "example": "role.all"
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "about:blank"
          },
          "type": {
            "type": "string",
            "example": "Error details here"
          },
          "status": {
            "type": "integer",
            "example": 400
          }
        }
      },
      "NotFoundResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "404 Not Found"
          },
          "exception": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "example": "Slim\\Exception\\HttpNotFoundException"
              },
              "code": {
                "type": "integer",
                "example": 404
              },
              "message": {
                "type": "string",
                "example": "Not Found"
              },
              "file": {
                "type": "string",
                "example": "../hashtopolis/server/vendor/slim/slim/Slim/Middleware/RoutingMiddleware.php"
              },
              "line": {
                "type": "integer",
                "example": 91
              }
            } 
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "description": "JWT Authorization header using the Bearer scheme.",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      },
      "basicAuth": {
        "type": "http",
        "description": "Basic Authorization header.",
        "scheme": "basic"
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ]
}
